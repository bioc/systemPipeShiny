% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spsUIcollections.R
\name{dynamicFile}
\alias{dynamicFile}
\title{dynamically generate select file input}
\usage{
dynamicFile(
  id,
  title = "Select your file:",
  label = "Browse",
  icon = NULL,
  style = "",
  multiple = FALSE
)
}
\arguments{
\item{id}{element id}

\item{title}{element title}

\item{label}{upload button label}

\item{icon}{button icon, only works for \code{local} mode}

\item{style}{additional button style, only works for \code{local} mode}

\item{multiple}{multiple files allowed}
}
\value{
div
}
\description{
depending on the mode in options, render similar UI but
server side works differently. \code{local} mode will not copy file, directly
use a path pointer, \code{server} mode upload file and store in temp. Expect
similar behavior as
\code{fileInput}.
}
\examples{
if(interactive()){
    library(shinyjs)
    # change to 'local' to see the difference
    options(sps = list(mode='server'))
    ui <- fluidPage(
        useShinyjs(),
        dynamicFile("getFile"),
        textOutput("txt_file")
    )

    server <- function(input,output,session){
        runjs('$(".sps-file input").attr("readonly", true)')
        myfile <- dynamicFileServer(input,session, id = "getFile")
        observe({
            print(myfile())
        })
    }
    shinyApp(ui = ui, server = server)
}
}
