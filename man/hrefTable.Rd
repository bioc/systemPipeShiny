% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spsUIcollections.R
\name{hrefTable}
\alias{hrefTable}
\title{A table of hyper reference buttons}
\usage{
hrefTable(
  Id = NULL,
  title = "A Table of list of tabs",
  text_color = "#0275d8",
  item_titles,
  item_labels,
  item_hrefs,
  ...
)
}
\arguments{
\item{Id}{optional}

\item{title}{title of this table}

\item{text_color}{text color}

\item{item_titles}{vector of strings, a vector of titles for table row names}

\item{item_labels}{list, a list of character vectors to specify button
labels in each table item}

\item{item_hrefs}{list, a list  of character vectors to specify button hrefs
links}

\item{...}{other HTML args}
}
\value{
HTML elements
}
\description{
creates a table in Shiny which the cells are hyper reference
buttons
}
\details{
\code{item_titles}, \code{item_labels}, \code{item_hrefs} must have the same
length. Each item in \code{item_labels}, \code{item_hrefs} must also have the same
length. For example, if we want to make a table of two rows, the first row
has 1 cell and the second row has 2 cells:\preformatted{ hrefTable(
     item_titles = c("row 1", "row 2"),
     item_labels = list(c("cell 1"), c("cell 1", "cell 2")),
     item_hrefs = list(c("link1"), c("link1", "link2")
 )
}

Must call \code{\link[=useSps]{useSps()}} in UI.

The more often used versuin in SPS framework is \code{\link[=genHrefTable]{genHrefTable()}}
}
\examples{
if(interactive()){

    ui <- fluidPage(
        useSps(),
        hrefTable(item_titles = c("workflow 1", "workflow 2"),
                  item_labels = list(c("tab 1"), c("tab 3", "tab 4")),
                  item_hrefs = list(c("https://www.google.com/"), c("", "")),
        )

    )

    server <- function(input, output, session) {

    }

    shinyApp(ui, server)
}
}
