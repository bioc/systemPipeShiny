% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spsServerFunctions.R
\name{addData}
\alias{addData}
\alias{getData}
\alias{addPlot}
\alias{getPlot}
\title{Add and get data between shiny modules}
\usage{
addData(data, shared, tabname, type = "data")

getData(tabname, shared, type = "data")

addPlot(plot, shared, tabname)

getPlot(tabname, shared)
}
\arguments{
\item{data}{any type of R object you want to store and use in other tabs}

\item{shared}{the SPS shared reactivevalues object}

\item{tabname}{tab name of current tab if using `addData` method and tab
name to get data from if using `getData`.}

\item{type}{one of data, plot}
}
\value{
Nothing to return with `add` method and returns original object for
the `get` method
}
\description{
These function groups are designed to be used inside shiny modules
}
\details{
`addPlot`, `getPlot` are wrappers of `add/getData` method where
\code{type = "plot"}
}
\examples{
library(shiny)
library(shinytoastr)
resolveOptions()
ui <- fluidPage(
    useToastr(),
    actionButton("add", "add"),
    actionButton("get", "get"),
    actionButton("wrong", "when it gets wrong")
)
server <- function(input, output, session) {
    tab_info <- tibble::tibble(
        Tab_name = 'df_count',
        Display_label = 'Count Table',
        type = 'data',
        image = ''
    )
    shared <- reactiveValues()
    data <- tibble::tibble(this = 123)
    cat('before adding\n')
    print(shared)
    observeEvent(input$add, {
        addData(data, shared, "thistab")
        cat('after adding\n')
        print(shared) # watch the data_intask object is created
    })
    observeEvent(input$get, {
        cat("get data\n")
        getData('thistab', shared)
    })
    observeEvent(input$wrong, {
        cat("get wrong data\n")
        getData('not_there', shared)
    })
}
shinyApp(ui, server)
}
